package com.digital.backend.action.items.hotnews;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Calendar;
import java.util.Hashtable;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.io.FilenameUtils;

import com.digital.backend.bean.hotnews.HotNewsBean;
import com.digital.backend.common.file.CustomFileRenamePolicy;
import com.digital.backend.dao.hotnews.HotNewsDAO;
import com.oreilly.servlet.multipart.FilePart;
import com.oreilly.servlet.multipart.MultipartParser;
import com.oreilly.servlet.multipart.ParamPart;
import com.oreilly.servlet.multipart.Part;

public class HotNewsAddAction extends HttpServlet{
	private static final long serialVersionUID = 1L;
	private int HOTNEWS_LANG_CHT = 1;
	private int HOTNEWS_LANG_ENU = 2;
	private String HOTNEWS_UPLOAD_DIR = "/backend/upload/";

	@Override
	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		try {
			processRequest(request, response);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	@Override
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		try {
			processRequest(request, response);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void processRequest(HttpServletRequest request,
			HttpServletResponse response) throws Exception{
		@SuppressWarnings("rawtypes")
		Hashtable parameters = new Hashtable();
		parameters = upload(request, response);
		
		//CHT
		String title_cht = parameters.get("title_cht") == null ? "" : parameters.get("title_cht").toString();
		String author_cht = parameters.get("author_cht") == null ? "" : parameters.get("author_cht").toString();
		String link_1_cht = parameters.get("link_1_cht") == null ? "" : parameters.get("link_1_cht").toString();
		String link_2_cht = parameters.get("link_2_cht") == null ? "" : parameters.get("link_2_cht").toString();
		String link_3_cht = parameters.get("link_3_cht") == null ? "" : parameters.get("link_3_cht").toString();
		String image_1_cht = parameters.get("image_1_cht") == null ? "" : parameters.get("image_1_cht").toString();
		String image_2_cht = parameters.get("image_2_cht") == null ? "" : parameters.get("image_2_cht").toString();
		String image_3_cht = parameters.get("image_3_cht") == null ? "" : parameters.get("image_3_cht").toString();
		int breadcrumb_1_cht = Integer.parseInt(parameters.get("breadcrumb_1_cht") == null ? "0" : parameters.get("breadcrumb_1_cht").toString());
		int breadcrumb_2_cht = Integer.parseInt(parameters.get("breadcrumb_2_cht") == null ? "0" : parameters.get("breadcrumb_2_cht").toString());
		int breadcrumb_3_cht = Integer.parseInt(parameters.get("breadcrumb_3_cht") == null ? "0" : parameters.get("breadcrumb_3_cht").toString());
		String file_1_cht = parameters.get("file_1_cht") == null ? "" : parameters.get("file_1_cht").toString();
		String file_2_cht = parameters.get("file_2_cht") == null ? "" : parameters.get("file_2_cht").toString();
		String file_3_cht = parameters.get("file_3_cht") == null ? "" : parameters.get("file_3_cht").toString();
		String subtitle_cht = parameters.get("subtitle_cht") == null ? "" : parameters.get("subtitle_cht").toString();
		String description_cht = parameters.get("description_cht") == null ? "" : parameters.get("description_cht").toString();
		int top_cht = Integer.parseInt(parameters.get("top_cht") == null ? "0" : parameters.get("top_cht").toString());
		int enabled_cht = Integer.parseInt(parameters.get("enabled_cht") == null ? "" : parameters.get("enabled_cht").toString());
		
		//ENU
		String title_enu = parameters.get("title_enu") == null ? "" : parameters.get("title_enu").toString();
		String author_enu = parameters.get("author_enu") == null ? "" : parameters.get("author_enu").toString();
		String link_1_enu = parameters.get("link_1_enu") == null ? "" : parameters.get("link_1_enu").toString();
		String link_2_enu = parameters.get("link_2_enu") == null ? "" : parameters.get("link_2_enu").toString();
		String link_3_enu = parameters.get("link_3_enu") == null ? "" : parameters.get("link_3_enu").toString();
		String image_1_enu = parameters.get("image_1_enu") == null ? "" : parameters.get("image_1_enu").toString();
		String image_2_enu = parameters.get("image_2_enu") == null ? "" : parameters.get("image_2_enu").toString();
		String image_3_enu = parameters.get("image_3_enu") == null ? "" : parameters.get("image_3_enu").toString();
		int breadcrumb_1_enu = Integer.parseInt(parameters.get("breadcrumb_1_enu") == null ? "0" : parameters.get("breadcrumb_1_enu").toString());
		int breadcrumb_2_enu = Integer.parseInt(parameters.get("breadcrumb_2_enu") == null ? "0" : parameters.get("breadcrumb_2_enu").toString());
		int breadcrumb_3_enu = Integer.parseInt(parameters.get("breadcrumb_3_enu") == null ? "0" : parameters.get("breadcrumb_3_enu").toString());
		String file_1_enu = parameters.get("file_1_enu") == null ? "" : parameters.get("file_1_enu").toString();
		String file_2_enu = parameters.get("file_2_enu") == null ? "" : parameters.get("file_2_enu").toString();
		String file_3_enu = parameters.get("file_3_enu") == null ? "" : parameters.get("file_3_enu").toString();
		String subtitle_enu = parameters.get("subtitle_enu") == null ? "" : parameters.get("subtitle_enu").toString();
		String description_enu = parameters.get("description_enu") == null ? "" : parameters.get("description_enu").toString();
		int top_enu = Integer.parseInt(parameters.get("top_enu") == null ? "" : parameters.get("top_enu").toString());
		int enabled_enu = Integer.parseInt(parameters.get("enabled_enu") == null ? "" : parameters.get("enabled_enu").toString());
		
		//CHT
		/*String title_cht = String.valueOf(request.getAttribute("title_cht") == null ? "" : request.getAttribute("title_cht"));
		String author_cht = String.valueOf(request.getAttribute("author_cht") == null ? "" : request.getAttribute("author_cht"));
		//image
		String link_1_cht = String.valueOf(request.getAttribute("link_1_cht") == null ? "" : request.getAttribute("link_1_cht"));
		String link_2_cht = String.valueOf(request.getAttribute("link_2_cht") == null ? "" : request.getAttribute("link_2_cht"));
		String link_3_cht = String.valueOf(request.getAttribute("link_3_cht") == null ? "" : request.getAttribute("link_3_cht"));
		String subtitle_cht = String.valueOf(request.getAttribute("subtitle_cht") == null ? "" : request.getAttribute("subtitle_cht"));
		String description_cht = String.valueOf(request.getAttribute("description_cht") == null ? "" : request.getAttribute("description_cht"));
		int top_cht = Integer.parseInt(String.valueOf(request.getAttribute("top_cht") == null ? "0" : request.getAttribute("top_cht")));
		int enabled_cht = Integer.parseInt(String.valueOf(request.getAttribute("enabled_cht") == null ? "0" : request.getAttribute("enabled_cht")));
		//ENU
		String title_enu = String.valueOf(request.getAttribute("title_enu") == null ? "" : request.getAttribute("title_enu"));
		String author_enu = String.valueOf(request.getAttribute("author_enu") == null ? "" : request.getAttribute("author_enu"));
		//image
		String link_1_enu = String.valueOf(request.getAttribute("link_1_enu") == null ? "" : request.getAttribute("link_1_enu"));
		String link_2_enu = String.valueOf(request.getAttribute("link_2_enu") == null ? "" : request.getAttribute("link_2_enu"));
		String link_3_enu = String.valueOf(request.getAttribute("link_3_enu") == null ? "" : request.getAttribute("link_3_enu"));
		String subtitle_enu = String.valueOf(request.getAttribute("subtitle_enu") == null ? "" : request.getAttribute("subtitle_enu"));
		String description_enu = String.valueOf(request.getAttribute("description_enu") == null ? "" : request.getAttribute("description_enu"));
		int top_enu = Integer.parseInt(String.valueOf(request.getAttribute("top_enu") == null ? "0" : request.getAttribute("top_enu")));
		int enabled_enu = Integer.parseInt(String.valueOf(request.getAttribute("enabled_enu") == null ? "0" : request.getAttribute("enabled_enu")));*/
		
		//set up bean
		//CHT
		HotNewsBean bean = new HotNewsBean();
		bean.setLang_id(HOTNEWS_LANG_CHT);
		bean.setTitle(title_cht);
		bean.setAuthor(author_cht);
		bean.setLinkA(link_1_cht);
		bean.setLinkB(link_2_cht);
		bean.setLinkC(link_3_cht);
		bean.setImageApath(image_1_cht);
		bean.setImageBpath(image_2_cht);
		bean.setImageCpath(image_3_cht);
		bean.setBreadcrumbA(breadcrumb_1_cht);
		bean.setBreadcrumbB(breadcrumb_2_cht);
		bean.setBreadcrumbC(breadcrumb_3_cht);
		bean.setFileApath(file_1_cht);
		bean.setFileBpath(file_2_cht);
		bean.setFileCpath(file_3_cht);
		bean.setSubtitle(subtitle_cht);
		bean.setDescription(description_cht);
		bean.setTop(top_cht);
		bean.setEnabled(enabled_cht);

		HotNewsDAO.getInstance().insertHotNews(bean);
		
		//ENU
		bean.setLang_id(HOTNEWS_LANG_ENU);
		bean.setTitle("".equals(title_enu) ? title_cht : title_enu);
		bean.setAuthor("".equals(author_enu) ? author_cht : author_enu);
		bean.setLinkA("".equals(link_1_enu) ? link_1_cht : link_1_enu);
		bean.setLinkB("".equals(link_2_enu) ? link_2_cht : link_2_enu);
		bean.setLinkC("".equals(link_3_enu) ? link_3_cht : link_3_enu);
		bean.setImageApath("".equals(image_1_enu) ? image_1_cht : image_1_enu);
		bean.setImageBpath("".equals(image_2_enu) ? image_2_cht : image_2_enu);
		bean.setImageCpath("".equals(image_3_enu) ? image_3_cht : image_3_enu);
		bean.setBreadcrumbA(breadcrumb_1_enu == 0 ? breadcrumb_1_cht : breadcrumb_1_enu);
		bean.setBreadcrumbB(breadcrumb_2_enu == 0 ? breadcrumb_2_cht : breadcrumb_2_enu);
		bean.setBreadcrumbC(breadcrumb_3_enu == 0 ? breadcrumb_3_cht : breadcrumb_3_enu);
		bean.setFileApath("".equals(file_1_enu) ? file_1_cht : file_1_enu);
		bean.setFileBpath("".equals(file_2_enu) ? file_2_cht : file_2_enu);
		bean.setFileCpath("".equals(file_3_enu) ? file_3_cht : file_3_enu);
		bean.setSubtitle("".equals(subtitle_enu) ? subtitle_cht : subtitle_enu);
		bean.setDescription("".equals(description_enu) ? description_cht : description_enu);
		bean.setTop(top_enu == 0 ? top_cht : top_enu);
		bean.setEnabled(enabled_enu == 0 ? enabled_cht : enabled_enu);
		
		HotNewsDAO.getInstance().insertHotNews(bean);
		
		String url = "/backend/hotnews/hotnews-list.jsp";
		getServletContext().getRequestDispatcher(url).forward(request, response);
	}
	
	@SuppressWarnings({ "rawtypes", "unchecked" })
	public Hashtable upload(HttpServletRequest request, HttpServletResponse response) throws Exception{
		Hashtable parameters = new Hashtable();
		
		Calendar calendar = Calendar.getInstance();
		long nowTime = calendar.getTimeInMillis();
		
		String error         = "";
		String fileName      = "";
		// max Upload < 10MB !
		MultipartParser parser = new MultipartParser(request, 10*1024*1024);
		Part part;
		while ((part = parser.readNextPart()) != null){
			String name = part.getName();
		    if (part.isParam()) {
		    	ParamPart paramPart = (ParamPart) part;
		        String value = paramPart.getStringValue();
		        parameters.put(name, value);
		    }else if (part.isFile()) {
		        FilePart filePart = (FilePart) part;
		        filePart.setRenamePolicy(new CustomFileRenamePolicy());
		        fileName = filePart.getFileName();
		        if (fileName != null){
		        	parameters.put(filePart.getName(), String.valueOf(nowTime) + "." + FilenameUtils.getExtension(fileName));
		            FileOutputStream outs = null;
		            try{
		            	new File(HOTNEWS_UPLOAD_DIR).mkdirs();
		                outs = new FileOutputStream(HOTNEWS_UPLOAD_DIR+fileName);
		                filePart.writeTo(outs);
		                outs.flush();
		                outs.close();
		            }catch (Exception e) {
		            	error = "Failed in MultiPartRequest: " + e.getMessage();
		            	System.out.println(error);
		            }
		         }
		     }
		  }
		  return parameters;
	}
}
